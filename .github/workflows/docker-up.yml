name: Docker CI/CD Pipeline

on:
  push:
    branches: [ "master" ]

jobs:

  build:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v2 
    - name: Docker Login
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build the Docker image 
      uses: docker/build-push-action@v2
      with:
        context: .
        file: .
        push: true
        tags: tariq87/webapp:latest
    - name: Deploy to EC2 instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.USERNAME }} 
        key: ${{ secrets.SSH_KEY }}
        script: |
          if [ "$(docker ps -a -q)" != "" ]; then
          sudo docker rm -f $(docker ps -a -q)
          fi
          if [ "$(docker images -a -q)" != "" ]; then
          sudo docker rmi -f $(docker images -a -q)
          fi
          sudo docker-compose -f /home/ubuntu/actions-runner/_work/Proyecto-Industria-Software/Proyecto-Industria-Software/docker-compose.yml up -d
          for i in {1..10}; do
            if sudo docker exec db pg_isready -U postgres; then
              break
            fi
            echo "Waiting for PostgreSQL to become ready..."
            sleep 10
          done
          sudo cat dump.sql | docker exec -i db psql -U postgres
