(function (React) {
  'use strict';

  function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

  var React__default = /*#__PURE__*/_interopDefault(React);

  /*! js-cookie v3.0.5 | MIT */
  /* eslint-disable no-var */
  function assign(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        target[key] = source[key];
      }
    }
    return target;
  }
  /* eslint-enable no-var */

  /* eslint-disable no-var */
  var defaultConverter = {
    read: function (value) {
      if (value[0] === '"') {
        value = value.slice(1, -1);
      }
      return value.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent);
    },
    write: function (value) {
      return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);
    }
  };
  /* eslint-enable no-var */

  /* eslint-disable no-var */

  function init(converter, defaultAttributes) {
    function set(name, value, attributes) {
      if (typeof document === 'undefined') {
        return;
      }
      attributes = assign({}, defaultAttributes, attributes);
      if (typeof attributes.expires === 'number') {
        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);
      }
      if (attributes.expires) {
        attributes.expires = attributes.expires.toUTCString();
      }
      name = encodeURIComponent(name).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);
      var stringifiedAttributes = '';
      for (var attributeName in attributes) {
        if (!attributes[attributeName]) {
          continue;
        }
        stringifiedAttributes += '; ' + attributeName;
        if (attributes[attributeName] === true) {
          continue;
        }

        // Considers RFC 6265 section 5.2:
        // ...
        // 3.  If the remaining unparsed-attributes contains a %x3B (";")
        //     character:
        // Consume the characters of the unparsed-attributes up to,
        // not including, the first %x3B (";") character.
        // ...
        stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];
      }
      return document.cookie = name + '=' + converter.write(value, name) + stringifiedAttributes;
    }
    function get(name) {
      if (typeof document === 'undefined' || arguments.length && !name) {
        return;
      }

      // To prevent the for loop in the first place assign an empty array
      // in case there are no cookies at all.
      var cookies = document.cookie ? document.cookie.split('; ') : [];
      var jar = {};
      for (var i = 0; i < cookies.length; i++) {
        var parts = cookies[i].split('=');
        var value = parts.slice(1).join('=');
        try {
          var found = decodeURIComponent(parts[0]);
          jar[found] = converter.read(value, found);
          if (name === found) {
            break;
          }
        } catch (e) {}
      }
      return name ? jar[name] : jar;
    }
    return Object.create({
      set,
      get,
      remove: function (name, attributes) {
        set(name, '', assign({}, attributes, {
          expires: -1
        }));
      },
      withAttributes: function (attributes) {
        return init(this.converter, assign({}, this.attributes, attributes));
      },
      withConverter: function (converter) {
        return init(assign({}, this.converter, converter), this.attributes);
      }
    }, {
      attributes: {
        value: Object.freeze(defaultAttributes)
      },
      converter: {
        value: Object.freeze(converter)
      }
    });
  }
  var api = init(defaultConverter, {
    path: '/'
  });

  const dashboard = () => {
    const logout = async () => {
      try {
        api.remove('token');
      } catch (error) {
        console.log(error);
      }
    };
    return /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        padding: '40px'
      }
    }, /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        marginBottom: '20px'
      }
    }, /*#__PURE__*/React__default.default.createElement("h1", {
      style: {
        textAlign: 'center',
        fontSize: '2em',
        padding: '10px',
        textWrap: 'wrap',
        color: 'black',
        fontWeight: 'bold'
      }
    }, "Bienvenido al panel crud de administrador"), /*#__PURE__*/React__default.default.createElement("p", {
      style: {
        color: 'black',
        padding: '10px'
      }
    }, "Aqu\xED podr\xE1s gestionar los registros de la base de datos haciendo click en \"prisma\" en la barra lateral podras observar todos las tablas de la base de datos, haciendo click en un modelo podras observar los registros actuales")), /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        display: 'flex',
        flexWrap: 'wrap',
        justifyContent: 'space-around',
        alignItems: 'center'
      }
    }, /*#__PURE__*/React__default.default.createElement("a", {
      // href='http://localhost:5173/admin/home' //dev
      href: "https://classic-vision.alhanisespinal.tech/admin/home" //deploy
      ,
      style: {
        margin: '10px',
        textDecoration: 'none',
        color: 'black',
        backgroundColor: 'white',
        padding: '10px',
        // border: '1px solid black',
        borderRadius: '5px',
        height: '100px',
        width: '400px',
        boxShadow: '0px 0px 10px 0px lightgrey'
      }
    }, /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        padding: '10px'
      }
    }, /*#__PURE__*/React__default.default.createElement("h5", {
      style: {
        color: 'black',
        fontWeight: 'bold',
        textAlign: 'center',
        textJustify: 'center'
      }
    }, "Volver al Home "), /*#__PURE__*/React__default.default.createElement("p", null, "Click aqu\xED para volver al panel anterior para ver todas las funciones del administrador"))), /*#__PURE__*/React__default.default.createElement("a", {
      onClick: logout
      // href='http://localhost:5173/login' //dev
      ,
      href: "https://classic-vision.alhanisespinal.tech/login" //deploy
      ,
      style: {
        margin: '10px',
        textDecoration: 'none',
        color: 'black',
        backgroundColor: 'white',
        padding: '10px',
        // border: '1px solid black',
        borderRadius: '5px',
        height: '100px',
        width: '400px',
        boxShadow: '0px 0px 10px 0px lightgrey'
      }
    }, /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        padding: '10px'
      }
    }, /*#__PURE__*/React__default.default.createElement("h5", {
      style: {
        color: 'black',
        fontWeight: 'bold',
        textAlign: 'center',
        textJustify: 'center'
      }
    }, "Salir "), /*#__PURE__*/React__default.default.createElement("p", null, "Click aqu\xED para cerrar tu sesi\xF3n")))));
  };

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.Dashboard = dashboard;

})(React);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
