version: '3'

services: 

  back-end:
    build: 
      context: server
    container_name: back-end
    working_dir: /usr/src/app
    networks: 
      - node-network
    # volumes: 
    #   - ./server:/usr/src/app
    #   - /usr/src/app/node_modules
    tty: true
    ports: 
      - "3000:3000"
    command: npm run dev
    depends_on:
       - db

  front-end:
    build: 
      context: client
    container_name: front-end
    working_dir: /usr/src/app
    networks: 
      - node-network
    volumes: 
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "5173:5173"
      # - "5173:4173" #for deploy
    command: npm run dev -- --host
    # command: npm run preview -- --host #fro deploy 

  db:
    image: postgres
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./data:/var/lib/postgresql/data
    environment: 
      - POSTGRES_PASSWORD=1234
    ports: 
      - "5432:5432"
    networks: 
      - node-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_PASSWORD=password
      - PGADMIN_DEFAULT_EMAIL=admin@postgres.com
      - PGADMIN_LISTEN_PORT=81
    ports:
      - "8001:81"
    networks: 
      - node-network

  nginx:
    build: 
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports: 
      - "8000:80"
    networks: 
      - node-network
    depends_on:
       - back-end
       - front-end
  
networks: 
  node-network:
    driver: bridge